#Python 数字数据类型用于存储数值。数据类型是不允许改变的,这就意味着如果改变数字数据类型得值，将重新分配内存空间。
var1 = 1
var2 = 10

#用del语句删除一些数字对象引用，del语句的语法是：
del var1
del var2

#Python 支持四种不同的数值类型：
#整型(Int) - 通常被称为是整型或整数，是正或负整数，不带小数点。
#长整型(long integers) - 无限大小的整数，整数最后是一个大写或小写的L。
#浮点型(floating point real values) - 浮点型由整数部分与小数部分组成，浮点型也可以使用科学计数法表示（2.5e2 = 2.5 x 102 = 250）。
#复数 (complex numbers) - 复数的虚部以字母J 或 j结尾 。如：2+3j
#长整型也可以使用小写"l"，但是还是建议您使用大写"L"，避免与数字"1"混淆。Python使用"L"来显示长整型。
#Python还支持复数，复数由实数部分和虚数部分构成，可以用a + bj,或者complex(a,b)表示， 复数的实部a和虚部b都是浮点型。
pi = 3.1415926
print pi

#字符串是 Python 中最常用的数据类型。我们可以使用引号来创建字符串。
#Python 接收单引号(' )，双引号(" )，三引号(""") 来表示字符串，引号的开始与结束必须的相同类型的。例如：
word = 'word'
sentence = "This is a sentence."
paragraph = """This is a paragraph. It is
made up of multiple lines and sentences."""

#Python访问子字符串，可以使用方括号([])来截取字符串，如下实例：
var1 = 'Hello World!'
var2 = "Python Programming"
print "var1[0]: ", var1[0]
print "var2[1:5]: ", var2[1:5]

#序列是Python中最基本的数据结构。序列中的每个元素都分配一个数字 - 它的位置，或索引，第一个索引是0，第二个索引是1，依此类推。
#列表是最常用的Python数据类型，它可以作为一个方括号内的逗号分隔值出现。列表的数据项不需要具有相同的类型。创建一个列表，只要把逗号分隔的不同的数据项使用方括号括起来即可。如下所示：
list1 = ['physics', 'chemistry', 1997, 2000];
list2 = [1, 2, 3, 4, 5 ];
list3 = ["a", "b", "c", "d"];
#与字符串的索引一样，列表索引从0开始。列表可以进行截取、组合等。
#使用下标索引来访问列表中的值，同样你也可以使用方括号的形式截取字符，如下所示：
list1 = ['physics', 'chemistry', 1997, 2000];
list2 = [1, 2, 3, 4, 5, 6, 7 ];
print "list1[0]: ", list1[0]
print "list2[1:5]: ", list2[1:5]
#你可以对列表的数据项进行修改，如下所示：
list = ['physics', 'chemistry', 1997, 2000];
list[2] = 2001;
#可以使用 del 语句来删除列表的的元素，如下实例：
list1 = ['physics', 'chemistry', 1997, 2000];
del list1[2];

#列表脚本操作符
#列表对+ 和*的操作符与字符串相似。+号用于组合列表，* 号用于重复列表。如下表所示：

#Python表达式	                        结果	                           描述
#len([1, 2, 3])	                         3	                                长度
#[1, 2, 3] + [4, 5, 6]                    [1, 2, 3, 4, 5, 6]              	组合
#['Hi!'] * 4	                             ['Hi!', 'Hi!', 'Hi!', 'Hi!']    	重复
#3 in [1, 2, 3]	                        True	                           元素是否存在于列表中
#for x in [1, 2, 3]: print x,	        1 2 3	                              迭代



#元组
#Python的元组与列表类似，不同之处在于元组的元素不能修改。元组使用小括号，列表使用方括号。
#元组创建很简单，只需要在括号中添加元素，并使用逗号隔开即可。如下实例：
tup1 = ('physics', 'chemistry', 1997, 2000);
tup2 = (1, 2, 3, 4, 5 );
tup3 = "a", "b", "c", "d";
tup4 = ();    # 创建空元组
tup5 = (50,); #元组中只包含一个元素时，需要在元素后面添加逗号。
#注意：元组与字符串类似，下标索引从0开始，可以进行截取，组合等。
#元组可以使用下标索引来访问元组中的值，如下实例:
tup1 = ('physics', 'chemistry', 1997, 2000);
tup2 = (1, 2, 3, 4, 5, 6, 7 );
print "tup1[0]: ", tup1[0]  # 运行结果为：tup1[0]:  physics
print "tup2[1:5]: ", tup2[1:5] # 运行结果为：tup2[1:5]:  (2, 3, 4, 5)
#可以使用del语句来删除整个元组,但是不允许删除元组中的元素。
tup = ('physics', 'chemistry', 1997, 2000);
del tup;
#元组中的元素值是不允许修改的，但我们可以对元组进行连接组合，如下实例:
tup1 = (12, 34.56);
tup2 = ('abc', 'xyz');
tup3 = tup1 + tup2;
print tup3;   #运行结果为：(12, 34.56, 'abc', 'xyz')